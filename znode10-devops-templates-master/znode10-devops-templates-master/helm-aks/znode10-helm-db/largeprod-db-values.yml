global:
  clusterType: ""
resources:
  znode10xrabbitmq:
    kind: StatefulSet
    enableService: true
    serviceType: ClusterIP
    ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: http
      port: 15672
      targetPort: 15672
    replicaCount: 1
    image:
      name: rabbitmq
      tag: 3-management
      pullPolicy: Always
    resources:
      requests:
        memory: "1000Mi"
        cpu: "300m"
      limits:
        memory: "1200Mi"
        cpu: "400m"

  znode10xelasticsearch:
    kind: StatefulSet
    enableService: true
    serviceType: ClusterIP
    ports:
    - name: http
      port: 9200
      targetPort: 9200
    replicaCount: 1
    image:
      name: docker.elastic.co/elasticsearch/elasticsearch
      tag: "8.6.2"
      pullPolicy: IfNotPresent
    env:
    - name: ES_JAVA_OPTS
      value: "-Xms4048m -Xmx4048m"
    - name: bootstrap.memory_lock
      value: "true"
    - name: cluster.name
      value: "docker-cluster-znode"
    - name: discovery.type
      value: "single-node"
    - name: ingest.geoip.downloader.enabled
      value: "false"
    - name: xpack.security.enabled
      value: "false"
    - name: xpack.security.transport.ssl.enabled
      value: "false"
    volume:
      size: 15Gi
      mountPath: /usr/share/elasticsearch/data
      azureFile:
        shareName: z10-elasticfileshare
        secretName: znode10storage
    resources:
      requests:
        memory: "8100Mi"
        cpu: "2050m"
      limits:
        memory: "8500Mi"
        cpu: "2500m"

  znode10xmongodb:
    kind: StatefulSet
    enableService: true
    serviceType: ClusterIP
    ports:
    - name: mongo
      port: 27017
      targetPort: 27017
    replicaCount: 1
    image:
      name: mongo
      tag: "4.2"
      pullPolicy: IfNotPresent
    volume:
      size: 15Gi
      mountPath: /data/db
      storageClassName: ""
    resources:
      requests:
        memory: "1000Mi"
        cpu: "300m"
      limits:
        memory: "1200Mi"
        cpu: "350m"
