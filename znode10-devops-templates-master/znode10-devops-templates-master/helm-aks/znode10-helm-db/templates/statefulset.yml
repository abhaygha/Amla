{{- range $name, $svc := .Values.resources }}
{{- if and ($svc.enableService | default true) (eq $svc.kind "StatefulSet") }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: {{ include "znode10-helm-db.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app: {{ $name }}
  annotations:
    meta.helm.sh/release-name: {{ $.Release.Name }}
    meta.helm.sh/release-namespace: {{ $.Release.Namespace }}
spec:
  serviceName: {{ $name }}
  replicas: {{ $svc.replicaCount }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      containers:
      - name: {{ $name }}
        image: "{{ $svc.image.name }}:{{ $svc.image.tag }}"
        imagePullPolicy: {{ $svc.image.pullPolicy | default "IfNotPresent" }}
        ports:
        {{- range $svc.ports }}
        - name: {{ .name }}
          containerPort: {{ .port }}
        {{- end }}
        env:
        {{- range $svc.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        resources:
          requests:
            memory: {{ $svc.resources.requests.memory }}
            cpu: {{ $svc.resources.requests.cpu }}
          limits:
            memory: {{ $svc.resources.limits.memory }}
            cpu: {{ $svc.resources.limits.cpu }}
        {{- if and (or (eq $name "znode10xelasticsearch") (eq $name "znode10xmongodb")) $svc.volume }}
        volumeMounts:
        - mountPath: {{ $svc.volume.mountPath }}
          name: storage
        {{- end }}
  {{- $isAks := eq $.Values.global.clusterType "aks" }}
  {{- if and (eq $name "znode10xmongodb") $svc.volume }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      labels:
        app: {{ $name }}
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ $svc.volume.size }}
  {{- $defaultStorageClass := ternary "managed-premium" "" $isAks }}
  {{- if or $svc.volume.storageClassName $defaultStorageClass }}
      storageClassName: {{ $svc.volume.storageClassName | default $defaultStorageClass }}
  {{- end }}
  {{- end }}
  {{- if and (eq $name "znode10xelasticsearch") $svc.volume }}
  {{- if $isAks }}
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: {{ $name }}-pvc
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      labels:
        app: {{ $name }}
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ $svc.volume.size }}
  {{- $defaultStorageClass := ternary "managed-premium" "" $isAks }}
  {{- if or $svc.volume.storageClassName $defaultStorageClass }}
      storageClassName: {{ $svc.volume.storageClassName | default $defaultStorageClass }}
  {{- end }}
  {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}