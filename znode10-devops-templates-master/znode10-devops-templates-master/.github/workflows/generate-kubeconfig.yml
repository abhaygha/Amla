name: Generate Kubeconfig Token

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target Environment (e.g., dev, prod, qa)"
        required: true
        type: string

      kubeconfig_type:
        description: "Select the type of kubeconfig to generate"
        required: true
        type: choice
        options:
          - generate-readonly-aks-kubeconfig.sh
          - generate-readonly-restart-aks-kubeconfig.sh
          - generate-readonly-vm-kubeconfig.sh
          - generate-readonly-restart-vm-kubeconfig.sh

      api_server_ip:
        description: "VM Kubernetes API server IP (Required for VM options)"
        required: false
        type: string

jobs:
  generate-vm:
    if: contains(inputs.kubeconfig_type, 'vm')
    name: Generate Kubeconfig (VM)
    runs-on: [self-hosted, 100.195]
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: kubernetes-rbac-access-provisioning

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Kubernetes Set up
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ vars.KUBECONFIG }}
          version: '1.19.9'

      - name: Validate VM input
        run: |
          if [[ -z "${{ inputs.api_server_ip }}" ]]; then
            echo "‚ùå api_server_ip is required for VM kubeconfig generation"
            exit 1
          fi

      - name: Run selected kubeconfig script (VM)
        run: |
          chmod +x "${{ inputs.kubeconfig_type }}"

          if [[ "${{ inputs.kubeconfig_type }}" == *"vm"* ]]; then
            CONTEXT_NAME="${{ inputs.environment }}"
            OUTPUT_PATH="kubernetes-rbac-access-provisioning"

            ./"${{ inputs.kubeconfig_type }}" \
              "${{ inputs.api_server_ip }}" \
              "$CONTEXT_NAME" \
              "$OUTPUT_PATH"
          else
            ./"${{ inputs.kubeconfig_type }}" \
              "${{ inputs.environment }}"
          fi

          ls -ltr
          pwd

      - name: Rename generated kubeconfig
        run: |
          mv *.yaml ${{ inputs.environment }}-kubeconfig
          echo "Renamed file:"
          ls -l ${{ inputs.environment }}-kubeconfig
          ls -ltr
          pwd

      - name: Upload generated kubeconfig artifact (VM)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.environment }}-kubeconfig
          path: kubernetes-rbac-access-provisioning/${{ inputs.environment }}-kubeconfig

  generate-aks:
    if: ${{ !contains(inputs.kubeconfig_type, 'vm') }}
    name: Generate Kubeconfig (AKS)
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: kubernetes-rbac-access-provisioning

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Kubernetes Set up
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ vars.KUBECONFIG }}
          version: '1.19.9'

      - name: Run selected kubeconfig script (AKS)
        run: |
          chmod +x "${{ inputs.kubeconfig_type }}"

          if [[ "${{ inputs.kubeconfig_type }}" == *"vm"* ]]; then
            CONTEXT_NAME="${{ inputs.environment }}"
            OUTPUT_PATH="kubernetes-rbac-access-provisioning"

            ./"${{ inputs.kubeconfig_type }}" \
              "${{ inputs.api_server_ip }}" \
              "$CONTEXT_NAME" \
              "$OUTPUT_PATH"
          else
            ./"${{ inputs.kubeconfig_type }}" \
              "${{ inputs.environment }}"
          fi

          ls -ltr
          pwd

      - name: Rename generated kubeconfig
        run: |
          mv *.yaml ${{ inputs.environment }}-kubeconfig
          echo "Renamed file:"
          ls -l ${{ inputs.environment }}-kubeconfig
          ls -ltr
          pwd

      - name: Upload generated kubeconfig artifact (AKS)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.environment }}-kubeconfig
          path: kubernetes-rbac-access-provisioning/${{ inputs.environment }}-kubeconfig