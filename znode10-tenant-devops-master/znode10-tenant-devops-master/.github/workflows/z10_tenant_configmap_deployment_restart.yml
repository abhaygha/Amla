name: Z10 Tenants-Configmap Deployment Restart

on:
  workflow_dispatch:
    inputs:
      configmap_name:
        description: 'Name of the ConfigMap to delete and re-create'
        required: true
        type: string
      env_path:
        description: 'Environment path for the Terraform configuration'
        required: true
        type: choice
        options:
          - 'tenants/uat/'
          - 'tenants/etna/dev/'
          - 'tenants/knox/dev/'
          - 'tenants/grow/dev/'
          - 'tenants/usds/'
          - 'tenants/trng/'
      deployment_name:
        description: 'Name of the Kubernetes deployment to restart'
        required: true
        type: string
      environment:
        description: 'Choose Environment'
        required: true
        type: choice
        options:
          - 'knoxdev'
          - 'etnadev'
          - 'growdev'
          - 'trng'
          - 'uat'
          - 'sandbox'

jobs:
  delete_and_create_configmap:
    name: Delete and Re-create ConfigMap
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Kubeconfig
        run: |
              mkdir -p ~/.kube
              echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
        shell: bash

      - name: Delete ConfigMap
        run: |
          kubectl get configmap -n znode
          kubectl delete configmap ${{ inputs.configmap_name }} -n znode

      - name: Terraform Init and Apply for ConfigMap
        working-directory: ./${{ inputs.env_path }}/terraform
        run: |
          terraform init
          terraform apply -target=kubernetes_config_map.${{ inputs.configmap_name }} -auto-approve

      - name: Rollout Restart Deployment
        run: |
          kubectl rollout restart deployment ${{ inputs.deployment_name }} -n znode
          kubectl rollout status deployment ${{ inputs.deployment_name }} -n znode
