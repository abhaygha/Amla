name: Azure Resource Provisioning with Terraform

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (e.g., dv, qa, lt, st, np, pr)'
        required: true
        default: 'dv'
      subscription:
        description: 'Select azure subscription'
        required: true
        type: choice
        options:
          - AZURE_CREDENTIALS_PROD_ADMIN
          - AZURE_CREDENTIALS_NP_ADMIN
          - AZURE_CREDENTIALS_NP
      tenant:
        description: 'Tenant name'
        required: true
        default: 'tenantA'
      location:
        description: 'Location for resource group'
        required: true
        default: 'East US'
        type: choice
        options:
          - East US
          - Central US
          - West Europe
          - North Europe
          - South Central US
          - Central India
      sql_admin_username:
        description: 'SQL admin username'
        required: false
      sql_admin_password:
        description: 'SQL admin password'
        required: false
        type: password
      config_json:
        description: 'JSON string for deploy flags and infra config'
        required: true
        default: >-
          {
            "deploy_acr": false,
            "deploy_aks": false,
            "deploy_storage": false,
            "deploy_sql": false,
            "system_node_vm_size": "Standard_D8as_v4",
            "user_node_vm_size": "Standard_D8as_v4",
            "vnet_cidr": "172.19.0.0/16",
            "subnet_cidr": "172.19.202.0/24"
          }

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Parse Azure Credentials
        id: parse_creds
        run: |
          echo "::set-output name=subscription_id::$(echo '${{ secrets[github.event.inputs.subscription] }}' | jq -r '.subscriptionId')"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets[github.event.inputs.subscription] }}

      - name: Parse JSON config
        id: config
        run: |
          echo '${{ github.event.inputs.config_json }}' > config.json
          jq -r 'to_entries[] | "TFVAR_\(.key)=\(.value)"' config.json >> $GITHUB_ENV

      - name: Terraform Init
        env:
          ARM_SUBSCRIPTION_ID: ${{ steps.parse_creds.outputs.subscription_id }}
        working-directory: ./Terraform/create_azure_resources
        run: terraform init

      - name: Terraform Validate
        working-directory: ./Terraform/create_azure_resources
        run: terraform validate   

      - name: Terraform Plan
        env:
          ARM_SUBSCRIPTION_ID: ${{ steps.parse_creds.outputs.subscription_id }}
          TFVAR_deploy_acr: ${{ env.TFVAR_deploy_acr }}
          TFVAR_deploy_aks: ${{ env.TFVAR_deploy_aks }}
          TFVAR_deploy_storage: ${{ env.TFVAR_deploy_storage }}
          TFVAR_deploy_sql: ${{ env.TFVAR_deploy_sql }}
          TFVAR_system_node_vm_size: ${{ env.TFVAR_system_node_vm_size }}
          TFVAR_user_node_vm_size: ${{ env.TFVAR_user_node_vm_size }}
          TFVAR_vnet_cidr: ${{ env.TFVAR_vnet_cidr }}
          TFVAR_subnet_cidr: ${{ env.TFVAR_subnet_cidr }}
        working-directory: ./Terraform/create_azure_resources
        run: |
          terraform plan -refresh=false \
            -var="environment=${{ github.event.inputs.environment }}" \
            -var="tenant=${{ github.event.inputs.tenant }}" \
            -var="location=${{ github.event.inputs.location }}" \
            -var="sql_admin_username=${{ github.event.inputs.sql_admin_username }}" \
            -var="sql_admin_password=${{ github.event.inputs.sql_admin_password }}" \
            -var="subscription_id=${{ steps.parse_creds.outputs.subscription_id }}" \
            -var="deploy_acr=$TFVAR_deploy_acr" \
            -var="deploy_aks=$TFVAR_deploy_aks" \
            -var="deploy_storage=$TFVAR_deploy_storage" \
            -var="deploy_sql=$TFVAR_deploy_sql" \
            -var="system_node_vm_size=$TFVAR_system_node_vm_size" \
            -var="user_node_vm_size=$TFVAR_user_node_vm_size" \
            -var="vnet_cidr=$TFVAR_vnet_cidr" \
            -var="subnet_cidr=$TFVAR_subnet_cidr"

      - name: Terraform Apply
        env:
          ARM_SUBSCRIPTION_ID: ${{ steps.parse_creds.outputs.subscription_id }}
          TFVAR_deploy_acr: ${{ env.TFVAR_deploy_acr }}
          TFVAR_deploy_aks: ${{ env.TFVAR_deploy_aks }}
          TFVAR_deploy_storage: ${{ env.TFVAR_deploy_storage }}
          TFVAR_deploy_sql: ${{ env.TFVAR_deploy_sql }}
          TFVAR_vm_size: ${{ env.TFVAR_vm_size }}
          TFVAR_vnet_cidr: ${{ env.TFVAR_vnet_cidr }}
          TFVAR_subnet_cidr: ${{ env.TFVAR_subnet_cidr }}
        working-directory: ./Terraform/create_azure_resources
        run: |
          terraform apply -auto-approve \
            -var="environment=${{ github.event.inputs.environment }}" \
            -var="tenant=${{ github.event.inputs.tenant }}" \
            -var="location=${{ github.event.inputs.location }}" \
            -var="sql_admin_username=${{ github.event.inputs.sql_admin_username }}" \
            -var="sql_admin_password=${{ github.event.inputs.sql_admin_password }}" \
            -var="subscription_id=${{ steps.parse_creds.outputs.subscription_id }}" \
            -var="deploy_acr=$TFVAR_deploy_acr" \
            -var="deploy_aks=$TFVAR_deploy_aks" \
            -var="deploy_storage=$TFVAR_deploy_storage" \
            -var="deploy_sql=$TFVAR_deploy_sql" \
            -var="system_node_vm_size=$TFVAR_system_node_vm_size" \
            -var="user_node_vm_size=$TFVAR_user_node_vm_size" \
            -var="vnet_cidr=$TFVAR_vnet_cidr" \
            -var="subnet_cidr=$TFVAR_subnet_cidr"
