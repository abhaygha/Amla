name: Build and Deploy WebStore Knoxdev


on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
        description: Enter hotfix branch, If any
        required: true
        default: dev


jobs: 
  build:
    name: Build WebStore Knoxdev 
    runs-on: ubuntu-latest
    environment: knoxdev
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: MRRSoft/znode10-pro-knox-webstore
          token: ${{ secrets.ACCESS_REPO }}
          ref: ${{inputs.branch}}


      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.KNOX_ACRUN }}
          password: ${{ secrets.KNOX_ACRPW }}
          registry: ${{ secrets.KNOX_ACR_SERVER }}.azurecr.io

      - name: Docker Compose Build 
        working-directory: ./
        run: docker compose -f docker-compose-release.yml --env-file .env.knoxdev  build --build-arg EnvFile=.env.knoxdev
        
      - name: Docker Compose Push 
        working-directory: ./
        run:  docker compose -f docker-compose-release.yml --env-file .env.knoxdev  push --ignore-push-failures

      - name: Docker Logout
        if: always()
        continue-on-error: true
        run: docker logout ${{ secrets.KNOX_ACR_SERVER }}.azurecr.io

  # deploy:
  #   name: Deploy WebStore knoxdev
  #   runs-on: ubuntu-latest
  #   environment: knoxdev
  #   needs: build
  #   steps:

  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with: 
  #         ref: master

  #     - name: Kubernetes Set up
  #       uses: azure/k8s-set-context@v1
  #       with:
  #         kubeconfig: ${{ secrets.KUBECONFIG }}
  #         version: '1.19.9'

  #     - name: Kubernetes Delete Deploy
  #       working-directory: tenants/knoxdev/deploy/app/pods/
  #       run: kubectl delete -f kube-deploy-webstore.yml -n znode

  #     - name: delete and create configmap
  #       working-directory: tenants/knoxdev/configmap
  #       run: |
  #         kubectl delete -f kube-webstore-config.yml -n znode
  #         kubectl create -f kube-webstore-config.yml -n znode       

  #     - name: Kubernetes Create Deploy
  #       working-directory: tenants/knoxdev/deploy/app/pods/
  #       run: kubectl create -f kube-deploy-webstore.yml -n znode

  
