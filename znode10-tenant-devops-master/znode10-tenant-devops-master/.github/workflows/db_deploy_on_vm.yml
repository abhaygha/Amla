name: Azure VM-DB build & deploy

on:
  workflow_dispatch:
    inputs:
      tenant:
        type: choice
        description: Select tenant name
        required: true
        options:
        - etna
        - klrt
      environment:
        type: choice
        description: Select environment
        required: true
        options:
        - np
        - npr
        - pr
       
      db_number:
        description: database build number
        required: true

      multifront_db:
        description: "Build Multifront DB"
        required: true
        default: false
        type: boolean

      hangfire_db:
        description: "Build Hangfire DB"
        required: true
        default: false
        type: boolean

      recommendation_db:
        description: "Build Recommendation DB"
        required: true
        default: false
        type: boolean

      payment_manager_db:
        description: "Build pymg Mngr DB"
        required: true
        default: false
        type: boolean

jobs:
  deploy_multifront_db:
    runs-on: [self-hosted, azure-vm-203.4]
    if: ${{ github.event.inputs.multifront_db == 'true' }}
    environment: ${{ github.event.inputs.environment }}${{ github.event.inputs.tenant }}

    steps:
      # Login using Azure credentials
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}

      - name: Download the mutlifront dacpac
        run: |
          az storage file download --path Znode_Multifront_Database_${{ inputs.db_number }}.dacpac --dest .\dacpac\ --share-name multifront-dacpac --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} 
          dir .\dacpac\

      - name: Deploy Multifront DB
        env:
          DACPAC_FILE: "${{ github.workspace }}/dacpac/Znode_Multifront_Database.dacpac"
          MASTER_DACPAC: "${{ github.workspace }}/dacpac/master.dacpac"
          DB_NAME: "wbst_${{ github.event.inputs.tenant }}_${{ github.event.inputs.environment }}"
          DB_USER: ${{ secrets.AZURE_DB_USERNAME }}
          DB_PASS: ${{ secrets.AZURE_DB_PASSWORD }}
        run: |
          echo "Deploying $DACPAC_FILE to $DB_NAME"
          /opt/sqlpackage/sqlpackage /Action:Publish \
            /SourceFile:"$DACPAC_FILE" \
            /TargetConnectionString:"Server=localhost;Database=$DB_NAME;User Id=$DB_USER;Password=$DB_PASS;Encrypt=False;TrustServerCertificate=True;" \
            /p:BlockOnPossibleDataLoss=false \
            /p:AdditionalDeploymentContributorArguments="/p:ReferencePath=$(dirname $MASTER_DACPAC)"


  deploy_hangfire_db:
    runs-on: [self-hosted, azure-vm-203.4]
    if: ${{ github.event.inputs.hangfire_db == 'true' }}
    environment: ${{ github.event.inputs.environment }}${{ github.event.inputs.tenant }}

    steps:
      # Login using Azure credentials
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}

      - name: Download the hangfire dacpac
        run: |
          az storage file download --path Znode_Multifront_Hangfire_Database_${{ inputs.db_number }}.dacpac --dest .\dacpac\ --share-name hangfire-dacpac --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} 
          dir .\dacpac\

      - name: Deploy Hangfire DB
        env:
          DACPAC_FILE: "${{ github.workspace }}/dacpac/Znode_Multifront_Hangfire_Database.dacpac"
          MASTER_DACPAC: "${{ github.workspace }}/dacpac/master.dacpac"
          DB_NAME: "hgfr_${{ github.event.inputs.tenant }}_${{ github.event.inputs.environment }}"
          DB_USER: ${{ secrets.AZURE_DB_USERNAME }}
          DB_PASS: ${{ secrets.AZURE_DB_PASSWORD }}
        run: |
          echo "Deploying $DACPAC_FILE to $DB_NAME"
          /opt/sqlpackage/sqlpackage /Action:Publish \
            /SourceFile:"$DACPAC_FILE" \
            /TargetConnectionString:"Server=localhost;Database=$DB_NAME;User Id=$DB_USER;Password=$DB_PASS;Encrypt=False;TrustServerCertificate=True;" \
            /p:BlockOnPossibleDataLoss=false \
            /p:AdditionalDeploymentContributorArguments="/p:ReferencePath=$(dirname $MASTER_DACPAC)"

  deploy_recommendation_db:
    runs-on: [self-hosted, azure-vm-203.4]
    if: ${{ github.event.inputs.recommendation_db == 'true' }}
    environment: ${{ github.event.inputs.environment }}${{ github.event.inputs.tenant }}
    steps:
      # Login using Azure credentials
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}

      - name: Download the Recommendation dacpac
        run: |
          az storage file download --path Znode_Multifront_RecommendationEngine_Database_${{ inputs.db_number }}.dacpac --dest .\dacpac\ --share-name rceg-dacpac --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} 
          dir .\dacpac\

      - name: Deploy Recommendation DB
        env:
          DACPAC_FILE: "${{ github.workspace }}/dacpac/Znode_Multifront_RecommendationEngine_Database.dacpac"
          MASTER_DACPAC: "${{ github.workspace }}/dacpac/master.dacpac"
          DB_NAME: "rceg_${{ github.event.inputs.tenant }}_${{ github.event.inputs.environment }}"
          DB_USER: ${{ secrets.AZURE_DB_USERNAME }}
          DB_PASS: ${{ secrets.AZURE_DB_PASSWORD }}
        run: |
          echo "Deploying $DACPAC_FILE to $DB_NAME"
          /opt/sqlpackage/sqlpackage /Action:Publish \
            /SourceFile:"$DACPAC_FILE" \
            /TargetConnectionString:"Server=localhost;Database=$DB_NAME;User Id=$DB_USER;Password=$DB_PASS;Encrypt=False;TrustServerCertificate=True;" \
            /p:BlockOnPossibleDataLoss=false \
            /p:AdditionalDeploymentContributorArguments="/p:ReferencePath=$(dirname $MASTER_DACPAC)"

  deploy_payment_manager_db:
    runs-on: [self-hosted, azure-vm-203.4]
    if: ${{ github.event.inputs.payment_manager_db == 'true' }}
    environment: ${{ github.event.inputs.environment }}${{ github.event.inputs.tenant }}
    steps:
      # Login using Azure credentials
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}

      - name: Download the Plugin Payment dacpac
        run: |
          az storage file download --path Znode_Multifront_Plugin_Payment_${{ inputs.db_number }}.dacpac --dest .\dacpac\ --share-name payment-dacpac --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} 
          dir .\dacpac\

      - name: Deploy Payment Manager DB
        env:
          DACPAC_FILE: "${{ github.workspace }}/dacpac/Znode_Multifront_Plugin_Payment.dacpac"
          MASTER_DACPAC: "${{ github.workspace }}/dacpac/master.dacpac"
          DB_NAME: "pymg_${{ github.event.inputs.tenant }}_${{ github.event.inputs.environment }}"
          DB_USER: ${{ secrets.AZURE_DB_USERNAME }}
          DB_PASS: ${{ secrets.AZURE_DB_PASSWORD }}
        run: |
          echo "Deploying $DACPAC_FILE to $DB_NAME"
          /opt/sqlpackage/sqlpackage /Action:Publish \
            /SourceFile:"$DACPAC_FILE" \
            /TargetConnectionString:"Server=localhost;Database=$DB_NAME;User Id=$DB_USER;Password=$DB_PASS;Encrypt=False;TrustServerCertificate=True;" \
            /p:BlockOnPossibleDataLoss=false \
            /p:AdditionalDeploymentContributorArguments="/p:ReferencePath=$(dirname $MASTER_DACPAC)"