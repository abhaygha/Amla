apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    znodekube.version: "10.0"
  creationTimestamp: null
  labels:
    app: znode10redistrng
  name: znode10redistrng
spec:
  replicas: 2
  selector:
    matchLabels:
      app: znode10redistrng
  serviceName: znode10redistrng
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      annotations:
        znodekube.version: "10.0"
      creationTimestamp: null
      labels:
        io.znodekube.network/znode10xapinetwork: "true"
        io.znodekube.network/znode10redistrngnetwork: "true"
        app: znode10redistrng
    spec:
      # affinity:
      #   nodeAffinity:
      #       requiredDuringSchedulingIgnoredDuringExecution:
      #           nodeSelectorTerms:
      #           - matchExpressions:
      #               - key: agentpool
      #                 operator: In
      #                 values:
      #                 - znodeuatapl
      containers:
        - image: redis/redis-stack:latest
          imagePullPolicy: Always
          name: znode10redistrng
          ports:
            - containerPort: 6379
            - containerPort: 8001
          resources: 
            requests:
                memory: 2200Mi
                cpu: 400m
            limits:
                memory: 2500Mi
                cpu: 500m

          volumeMounts: 
            - mountPath: /redis-master
              name: config
            - name: redis-data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: redis-config  # Make sure this ConfigMap exists and has 'redis.conf' key
            items:
              - key: redis.conf
                path: redis.conf
        - name: redis-data
          persistentVolumeClaim:
            claimName: znode10-redis-pvc 