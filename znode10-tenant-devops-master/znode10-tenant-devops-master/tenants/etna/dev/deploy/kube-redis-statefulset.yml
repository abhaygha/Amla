
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    znodekube.version: "10.0"
  labels:
    app: znode10redisdevetna
  name: znode10redisdevetna
spec:
  replicas: 1
  selector:
    matchLabels:
      app: znode10redisdevetna
  serviceName: znode10redisdevetna
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        znodekube.version: "10.0"
      labels:
        io.znodekube.network/znode10xapinetwork: "true"
        io.znodekube.network/znode10redisdevetnanetwork: "true"
        app: znode10redisdevetna
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - znode10apl
      containers:
      - image: redis/redis-stack-server:7.2.0-v10
        imagePullPolicy: Always
        name: znode10redisdevetna
        ports:
        - containerPort: 6379
        - containerPort: 8001
        resources:
          requests:
            memory: 4000Mi
            cpu: 300m
          limits:
            memory: 5000Mi
            cpu: 500m
        volumeMounts:
        - mountPath: /redis-master
          name: config
        - name: redis-data
          mountPath: /data
      volumes:
      - name: config
        configMap:
          name: redis-config
          items:
          - key: redis.conf
            path: redis.conf
      - name: redis-data
        persistentVolumeClaim:
          claimName: znode10-redis-pvc
