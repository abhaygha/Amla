apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    znodekube.version: "10.0"
  creationTimestamp: null
  labels:
    io.znodekube.service: znode10xcp
    service: znode10xcp
    app: znode10xcp
  name: znode10xcp
spec:
  replicas: 1
  selector:
    matchLabels:
      io.znodekube.service: znode10xcp
      service: znode10xcp
      app: znode10xcp
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        znodekube.version: "10.0"
      creationTimestamp: null
      labels:
        network/znode10xapinetworkexternal: "true"
        app: znode10xcp
        io.znodekube.service: znode10xcp
        service: znode10xcp
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - znode10upl

      imagePullSecrets:
      - name: prodacr
      terminationGracePeriodSeconds: 100
      containers:
      - envFrom:
        - configMapRef:
            name: znode10xcp

        image: znode10xregistry.azurecr.io/znode10cpportalimage:z10-etnapr-1

        resources:
          requests:
            memory: 1600Mi
            cpu: 400m
          limits:
            memory: 1800Mi
            cpu: 500m
        imagePullPolicy: Always
        name: znode10xcp
        lifecycle:
          preStop:
            exec:
              command: [ "/bin/sh", "-c", "sleep 100" ]
        ports:
        - containerPort: 443
        volumeMounts:
        - name: tls-certs
          mountPath: /app/ssl
          readOnly: true

      volumes:
      - name: tls-certs
        secret:
          secretName: amla-ssl-secret
        # - name: codeeditor-server-storage
        # persistentVolumeClaim:
        # claimName: znode10-codeeditor-server-pvc 
status: {}
---


